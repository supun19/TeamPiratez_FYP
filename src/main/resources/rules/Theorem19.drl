//created on: Dec 7, 2016
package com.parallelgrame

//list any import classes here.



//declare any global variables here


import com.sample.Angle;
import com.sample.Point;
import com.sample.Line;
import com.sample.Relation;
import com.sample.GeoType;
import com.sample.Triangle;
import com.sample.GeoRelation;
import com.sample.Quadrangle;
import com.engine.CheckingEngine;






rule "Theorem19"

    when
        //conditions
         //conditions
         // qudrangle
         $ABCD : Quadrangle()
         //two equal line
        $ABlineDC : GeoRelation( this.firstItem.type == GeoType.LINE, this.secondItem.type == GeoType.LINE, this.relation==Relation.EQUALS )
        //twoparallel line 
        $ABparaDC : GeoRelation( this.firstItem.type == GeoType.LINE, this.secondItem.type == GeoType.LINE, this.relation==Relation.PARALLEL_LINES )
   		//two equal line have not common point
   		eval(!((Line)$ABlineDC.firstItem).isAPoint(((Line)$ABlineDC.secondItem).endPoints[0]) && !((Line)$ABlineDC.firstItem).isAPoint(((Line)$ABlineDC.secondItem).endPoints[1])) 
   		// two line contain qudrangle 
   		//AB line
   		eval($ABCD.isAPoint(((Line)$ABlineDC.firstItem).endPoints[0]) && $ABCD.isAPoint(((Line)$ABlineDC.firstItem).endPoints[0]))
   		//CD line
   		eval($ABCD.isAPoint(((Line)$ABlineDC.secondItem).endPoints[0]) && $ABCD.isAPoint(((Line)$ABlineDC.secondItem).endPoints[0]))
   		
   		// now we have got two opsite line in quadrangle
   		
   		//two paralle line have not common point
   		eval(!((Line)$ABparaDC.firstItem).isAPoint(((Line)$ABparaDC.secondItem).endPoints[0]) && !((Line)$ABparaDC.firstItem).isAPoint(((Line)$ABparaDC.secondItem).endPoints[1])) 
   		// two parallel line contain qudrangle 
   		//AB line
   		eval($ABCD.isAPoint(((Line)$ABparaDC.firstItem).endPoints[0]) && $ABCD.isAPoint(((Line)$ABparaDC.firstItem).endPoints[0]))
   		//CD line
   		eval($ABCD.isAPoint(((Line)$ABparaDC.secondItem).endPoints[0]) && $ABCD.isAPoint(((Line)$ABparaDC.secondItem).endPoints[0]))
   		
   		//opiste line and parallel line should be same
   		eval(((Line)$ABlineDC.firstItem).sameItem(((Line)$ABparaDC.firstItem)))
    then
        //actions
//actions
        $ABCD.isAParalleologram=true;
       // insert($ABCD);
	System.out.println("theorem19");
end

